name: Daily Release

on:
  schedule:
    - cron: '0 19 * * *' # Run daily at 7 PM UTC
  workflow_dispatch:
    inputs:
      milestone_title:
        description: 'GitHub Milestone Title (Optional)'
        required: false

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-tags: true
        fetch-depth: 0
    
    - name: Get latest tag
      id: get_latest_tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0)
        echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT
    
    - name: Get last release tag
      id: get_last_release_tag
      run: |
        last_release_tag=$(gh release list --limit 1 --json tagName --jq '.[0].tagName' || echo "")
        echo "last_release_tag=$last_release_tag" >> $GITHUB_OUTPUT
    
    - name: Checkout to latest tag
      run: |
        git checkout ${{ steps.get_latest_tag.outputs.latest_tag }}
    
    - name: Check for GitHub milestone
      id: check_milestone
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        milestone_title="${{ github.event.inputs.milestone_title }}"
        if [ -z "$milestone_title" ]; then
          milestone_title=$(gh issue milestone list --limit 100 --json title,dueOn --jq '.[] | select(.dueOn == "$(date +"%Y-%m-%d")")|.title')
          if [ -z "$milestone_title" ]; then
            echo "No milestone due today"
            exit 1
          fi
        fi
        echo "milestone_title=$milestone_title" >> $GITHUB_OUTPUT
    
    - name: Create Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        last_release_tag="${{ steps.get_last_release_tag.outputs.last_release_tag }}"
        
        if [ -n "$last_release_tag" ]; then
          gh release create -d --latest --generate-notes --notes-start-tag=$last_release_tag
        else
          gh release create -d --latest --generate-notes
        fi
